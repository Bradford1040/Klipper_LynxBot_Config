[server]
host: 0.0.0.0
port: 7125
# The maximum size allowed for a file upload (in MiB).  Default 1024 MiB
max_upload_size: 1024
# Path to klippy Unix Domain Socket
klippy_uds_address: ~/printer_data/comms/klippy.sock

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True

[authorization]
cors_domains:
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://*.lan
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    127.0.0.1
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    192.168.178.37
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

[timelapse]
#   Directory where the generated video will be saved
output_path: ~/timelapse/
#   Directory where ffmpeg is installed
ffmpeg_binary_path: /usr/bin/ffmpeg

# [power TOOLHEAD_LIGHT]
# type: klipper_device
# object_name: gcode_macro SET_TOOLHEAD_LIGHT
# locked_while_printing: FALSE

[power NOZZLE_LIGHT]
type: klipper_device
object_name: gcode_macro NOZZLE_LIGHT
locked_while_printing: FALSE

[power STATUS_LIGHT]
type: klipper_device
object_name: gcode_macro STATUS_LIGHT
locked_while_printing: FALSE

[power LED_BARS]
type: klipper_device
object_name: gcode_macro LED_BARS
locked_while_printing: FALSE

[power LIGHT]
type: klipper_device
object_name: gcode_macro LIGHT
locked_while_printing: FALSE

[power LIGHT_SWITCH]
type: klipper_device
object_name: gcode_macro LIGHT_SWITCH
locked_while_printing: FALSE

[power KLICKY_ATTACHING_LOCKED]
type: klipper_device
object_name: gcode_macro LOCK_KLICKY_ATTACHING
locked_while_printing: True

[power KLICKY_DOCKING_LOCKED]
type: klipper_device
object_name: gcode_macro LOCK_KLICKY_DOCKING
locked_while_printing: True

# this enables moonraker announcements for mainsail
[announcements]
subscriptions:
    mainsail

# this enables moonraker's update manager
[update_manager]
refresh_interval: 168
enable_auto_refresh: True

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

### moonraker-timelapse
### Don't forget to include timelapse.cfg to your printer.cfg
### Uncomment to enable moonraker-timelapse

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/install.sh

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

[update_manager fluidd-config]
type: git_repo
primary_branch: master
path: ~/fluidd-config
origin: https://github.com/fluidd-core/fluidd-config.git
managed_services: klipper

[update_manager fluidd]
type: web
channel: stable
repo: fluidd-core/fluidd
path: ~/fluidd

[update_manager moonraker-telegram-bot]
type: git_repo
path: ~/moonraker-telegram-bot
origin: https://github.com/nlef/moonraker-telegram-bot.git
env: ~/moonraker-telegram-bot-env/bin/python
requirements: scripts/requirements.txt
install_script: scripts/install.sh

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/Zeanon/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen
